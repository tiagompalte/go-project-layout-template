basePath: /
definitions:
  handler.CategoryResponse:
    properties:
      name:
        type: string
      slug:
        type: string
    type: object
  handler.CreateNoteRequest:
    properties:
      message: {}
    type: object
  handler.CreateTaskRequest:
    properties:
      category_name:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  handler.NoteResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      message: {}
    type: object
  handler.SigninRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.SigninResponse:
    properties:
      access_token:
        type: string
    type: object
  handler.SignupRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  handler.SignupResponse:
    properties:
      access_token:
        type: string
    type: object
  handler.TaskResponse:
    properties:
      category:
        $ref: '#/definitions/handler.CategoryResponse'
      description:
        type: string
      done:
        type: boolean
      name:
        type: string
      uuid:
        type: string
    type: object
  handler.UpdateUserName:
    properties:
      new_name:
        type: string
      version:
        type: integer
    type: object
  handler.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      version:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: TODO API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: TODO API
  version: "1.0"
paths:
  /api/health-check:
    get:
      description: Verify health check application
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Health Check
      tags:
      - Health Check
  /api/v1/categories:
    get:
      description: Find all categories
      produces:
      - application/json
      responses:
        "200":
          description: Categories list
          schema:
            items:
              $ref: '#/definitions/handler.CategoryResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Find All Categories
      tags:
      - Category
  /api/v1/current/user:
    get:
      description: Find user logged
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/handler.UserResponse'
      security:
      - BearerAuth: []
      summary: User Logged
      tags:
      - User
  /api/v1/current/user/update-name:
    put:
      consumes:
      - application/json
      description: Update user name
      parameters:
      - description: Update User Name
        in: body
        name: update_user_name
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserName'
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/handler.UserResponse'
      security:
      - BearerAuth: []
      summary: Update User Name
      tags:
      - User
  /api/v1/notes:
    get:
      description: Find all notes
      parameters:
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notes list
          schema:
            items:
              $ref: '#/definitions/handler.NoteResponse'
            type: array
      summary: Find All Notes
      tags:
      - Note
    post:
      consumes:
      - application/json
      description: Create new Note
      parameters:
      - description: New Note
        in: body
        name: new_note
        required: true
        schema:
          $ref: '#/definitions/handler.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Create Note success
          schema:
            $ref: '#/definitions/handler.NoteResponse'
      summary: Create Note
      tags:
      - Note
  /api/v1/notes/{id}:
    get:
      description: Find Note by ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Note found
          schema:
            $ref: '#/definitions/handler.NoteResponse'
      summary: Find Note by ID
      tags:
      - Note
  /api/v1/signin:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login User
        in: body
        name: signin
        required: true
        schema:
          $ref: '#/definitions/handler.SigninRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Tokens
          schema:
            $ref: '#/definitions/handler.SigninResponse'
      summary: Sign In
      tags:
      - Sign In
  /api/v1/signup:
    post:
      consumes:
      - application/json
      description: Create new User
      parameters:
      - description: New User
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/handler.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Tokens
          schema:
            $ref: '#/definitions/handler.SignupResponse'
      summary: Sign Up
      tags:
      - Sign Up
  /api/v1/tasks:
    get:
      description: Find all tasks
      produces:
      - application/json
      responses:
        "200":
          description: Tasks list
          schema:
            items:
              $ref: '#/definitions/handler.TaskResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Find All Tasks
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: Create new Task
      parameters:
      - description: New Task
        in: body
        name: new_task
        required: true
        schema:
          $ref: '#/definitions/handler.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Create Task success
          schema:
            $ref: '#/definitions/handler.TaskResponse'
      security:
      - BearerAuth: []
      summary: Create Task
      tags:
      - Task
  /api/v1/tasks/{uuid}:
    delete:
      description: Delete task by UUID
      parameters:
      - description: Task UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete task
      tags:
      - Task
    get:
      description: Find one task by UUID
      parameters:
      - description: Task UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task
          schema:
            $ref: '#/definitions/handler.TaskResponse'
      security:
      - BearerAuth: []
      summary: Find One Task
      tags:
      - Task
  /api/v1/tasks/{uuid}/done:
    put:
      description: Update task as done
      parameters:
      - description: Task UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Mark task as done
      tags:
      - Task
  /api/v1/tasks/{uuid}/undone:
    put:
      description: Update task as undone
      parameters:
      - description: Task UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Mark task as undone
      tags:
      - Task
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
